# This file was 'partially' generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from functools import partial
from tkinter import Tk, Canvas, Button, PhotoImage
from predictions import compute

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path("./assets")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


if __name__ == "__main__":
    window = Tk()
    window.title("GUI for Digit Recognizer")

    window.geometry("720x480")
    window.configure(bg="#FFFFFF")

    canvas = Canvas(
        window,
        bg="#FFFFFF",
        height=480,
        width=720,
        bd=0,
        highlightthickness=0,
        relief="ridge"
    )

    canvas.place(x=0, y=0)
    canvas.create_rectangle(
        0.0,
        0.0,
        720.0,
        480.0,
        fill="#F2F2F2",
        outline="")

    image_image_1 = PhotoImage(
        file=relative_to_assets("image_1.png"))
    image_1 = canvas.create_image(
        357.0,
        281.0,
        image=image_image_1
    )

    image_image_2 = PhotoImage(
        file=relative_to_assets("image_2.png"))
    image_2 = canvas.create_image(
        43.04777145385742,
        114.16667175292969,
        image=image_image_2
    )

    image_image_3 = PhotoImage(
        file=relative_to_assets("image_3.png"))
    image_3 = canvas.create_image(
        67.11946105957031,
        114.16667175292969,
        image=image_image_3
    )

    image_image_4 = PhotoImage(
        file=relative_to_assets("image_4.png"))
    image_4 = canvas.create_image(
        91.1910171508789,
        114.16667175292969,
        image=image_image_4
    )

    canvas.create_text(
        35.0,
        425.0,
        anchor="nw",
        text="Let the trained model takes \nhis decision",
        fill="#475A89",
        font=("Roboto", 14 * -1)
    )

    canvas.create_text(
        35.0,
        387.0,
        anchor="nw",
        text="Step 3:\nModel s evaluation",
        fill="#475A89",
        font=("Roboto Bold", 14 * -1)
    )

    canvas.create_text(
        37.0,
        311.0,
        anchor="nw",
        text="Allows the model to\ndetects pattern he knows",
        fill="#475A89",
        font=("Roboto", 14 * -1)
    )

    canvas.create_text(
        35.0,
        272.11322021484375,
        anchor="nw",
        text="Step 2:\nResize image",
        fill="#475A89",
        font=("Roboto Bold", 14 * -1)
    )

    canvas.create_text(
        35.0,
        183.0,
        anchor="nw",
        text="Converting the initial\nimage to grayscale",
        fill="#475A89",
        font=("Roboto", 14 * -1)
    )

    canvas.create_text(
        35.0,
        140.0,
        anchor="nw",
        text="Step 1:\nRGB to Grayscale",
        fill="#475A89",
        font=("Roboto Bold", 14 * -1)
    )

    image_image_5 = PhotoImage(
        file=relative_to_assets("image_5.png"))
    image_5 = canvas.create_image(
        524.0,
        283.0,
        image=image_image_5
    )

    image_pred = PhotoImage(
        file=relative_to_assets("image_6.png"))
    output_predictions = canvas.create_image(
        524.0,
        284.0,
        image=image_pred
    )

    image_image_7 = PhotoImage(
        file=relative_to_assets("image_7.png"))
    image_7 = canvas.create_image(
        524.0,
        129.0,
        image=image_image_7
    )

    canvas.create_text(
        395.0,
        119.0,
        anchor="nw",
        text="Predictions of the AI",
        fill="#FFFFFF",
        font=("Roboto Bold", 14 * -1)
    )

    canvas.create_text(
        376.0,
        74.0,
        anchor="nw",
        text="Please select an image that contains a number",
        fill="#000000",
        font=("Roboto", 14 * -1)
    )

    canvas.create_text(
        24.0,
        14.0,
        anchor="nw",
        text="Digit Recognizer",
        fill="#475A89",
        font=("Roboto Medium", 36 * -1)
    )

    canvas.create_rectangle(
        360.0,
        99.0,
        362.0,
        464.0,
        fill="#485A89",
        outline="")

    image_01 = PhotoImage(
        file=relative_to_assets("image_8.png"))
    output_01 = canvas.create_image(
        263.0,
        319.0,
        image=image_01
    )

    image_00 = PhotoImage(
        file=relative_to_assets("image_9.png"))
    output_00 = canvas.create_image(
        263.0,
        194.0,
        image=image_00
    )

    button_image_1 = PhotoImage(
        file=relative_to_assets("button_1.png"))
    button_1 = Button(
        image=button_image_1,
        borderwidth=0,
        highlightthickness=0,
        command=partial(compute, output_00, output_01, output_predictions, canvas),
        relief="flat"
    )
    button_1.place(
        x=360.0,
        y=14.0,
        width=329.0,
        height=60.0
    )

    window.resizable(False, False)
    window.mainloop()
